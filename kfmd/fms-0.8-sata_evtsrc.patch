diff -urN k2_os-kernel-2.6.28.10-8b11/drivers/ata/libata-eh.c k2_os-kernel-2.6.28.10-8b11-sata/drivers/ata/libata-eh.c
--- k2_os-kernel-2.6.28.10-8b11/drivers/ata/libata-eh.c	2010-07-17 00:10:07.000000000 +0800
+++ k2_os-kernel-2.6.28.10-8b11-sata/drivers/ata/libata-eh.c	2010-07-17 00:12:39.000000000 +0800
@@ -1252,7 +1252,7 @@
  *	RETURNS:
  *	Descriptive string for @err_mask
  */
-static const char *ata_err_string(unsigned int err_mask)
+const char *ata_err_string(unsigned int err_mask)
 {
 	if (err_mask & AC_ERR_HOST_BUS)
 		return "host bus error";
diff -urN k2_os-kernel-2.6.28.10-8b11/drivers/ata/libata.h k2_os-kernel-2.6.28.10-8b11-sata/drivers/ata/libata.h
--- k2_os-kernel-2.6.28.10-8b11/drivers/ata/libata.h	2010-07-17 00:10:07.000000000 +0800
+++ k2_os-kernel-2.6.28.10-8b11-sata/drivers/ata/libata.h	2010-07-17 00:13:06.000000000 +0800
@@ -176,6 +176,7 @@
 			  ata_postreset_fn_t postreset,
 			  struct ata_link **r_failed_disk);
 extern void ata_eh_finish(struct ata_port *ap);
+extern const char *ata_err_string(unsigned int err_mask);
 
 /* libata-pmp.c */
 #ifdef CONFIG_SATA_PMP
diff -urN k2_os-kernel-2.6.28.10-8b11/drivers/ata/libata-pmp.c k2_os-kernel-2.6.28.10-8b11-sata/drivers/ata/libata-pmp.c
--- k2_os-kernel-2.6.28.10-8b11/drivers/ata/libata-pmp.c	2010-07-17 00:10:07.000000000 +0800
+++ k2_os-kernel-2.6.28.10-8b11-sata/drivers/ata/libata-pmp.c	2010-07-17 00:12:27.000000000 +0800
@@ -9,6 +9,7 @@
 
 #include <linux/kernel.h>
 #include <linux/libata.h>
+#include <linux/fm/protocol.h>
 #include "libata.h"
 
 const struct ata_port_operations sata_pmp_port_ops = {
@@ -823,6 +824,49 @@
 }
 
 /**
+ *	sata_fm_event_post - port sata fm event
+ *  @link: ATA link to recover
+ *	@dev: SATA device to be recovered
+ *	@recoverd: 0 on UC event, 1 on RC event
+ *	
+ *	After drive EH recovery operation for PMP enabled port, this
+ *  function post an UC or RC event to user space FMD.
+ *
+ *  RETURNS:
+ *  	none
+ */
+static void
+sata_fm_event_post(struct ata_link *link, struct ata_device *dev, int recoverd)
+{
+	char *recover = NULL;
+	char const *faultname = NULL;
+	char fullclass[PATH_MAX];
+	char fm_device[20];
+	unsigned int printid;
+	unsigned int dev_no;
+
+	printid = dev->link->ap->print_id;
+	dev_no = dev->link->pmp + dev->devno;
+
+	(void) snprintf(fm_device, sizeof(fm_device), "%u.%02u",
+		printid, dev_no);           /* device: ata3.00 */
+
+//  faultname = ata_err_string(qc->err_mask);       /* qc? */
+	faultname = ata_err_string(link->eh_info.err_mask);
+
+	if (recoverd == 1)
+		recover = "_rc";
+	else if (recoverd == 0)
+		recover = "_uc";
+
+	(void) snprintf(fullclass, sizeof(fullclass), "%s.io.sata.disk.%s%s",
+		FM_EREPORT_CLASS, faultname, recover);
+
+//  sata_fm_event_post(fullclass);
+	printk("sata_fm_event_post(%s)\n", fullclass);
+}
+
+/**
  *	sata_pmp_eh_recover - recover PMP-enabled port
  *	@ap: ATA port to recover
  *
@@ -847,9 +891,11 @@
 	u32 *gscr = pmp_dev->gscr;
 	struct ata_link *link;
 	struct ata_device *dev;
+	struct ata_device *dev1;
 	unsigned int err_mask;
 	u32 gscr_error, sntf;
 	int cnt, rc;
+//	int all, part;
 
 	pmp_tries = ATA_EH_PMP_TRIES;
 	ata_port_for_each_link(link, ap)
@@ -861,13 +907,18 @@
 		rc = ata_eh_recover(ap, ops->prereset, ops->softreset,
 				    ops->hardreset, ops->postreset, NULL);
 		if (rc) {
-			ata_link_for_each_dev(dev, &ap->link)
+			ata_link_for_each_dev(dev, &ap->link) {
+				sata_fm_event_post(pmp_link, dev, 0);
 				ata_dev_disable(dev);
+			}
 			return rc;
 		}
 
-		if (pmp_dev->class != ATA_DEV_PMP)
+		if (pmp_dev->class != ATA_DEV_PMP) {
+			sata_fm_event_post(pmp_link, pmp_dev, 1);
+
 			return 0;
+		}
 
 		/* new PMP online */
 		ata_port_for_each_link(link, ap)
@@ -909,6 +960,9 @@
 	if (rc)
 		goto link_fail;
 
+	if (rc == 0)	/* Recover success. */
+		sata_fm_event_post(link, link->device, 1);
+
 	/* Connection status might have changed while resetting other
 	 * links, check SATA_PMP_GSCR_ERROR before returning.
 	 */
@@ -955,6 +1009,8 @@
 				"giving up\n");
 			ata_link_printk(link, KERN_WARNING,
 				"Manully issue scan to resume this link\n");
+
+			sata_fm_event_post(link, link->device, 0);
 		}
 	}
 
@@ -991,6 +1047,11 @@
 	ata_port_printk(ap, KERN_ERR,
 			"failed to recover PMP after %d tries, giving up\n",
 			ATA_EH_PMP_TRIES);
+
+	ata_link_for_each_dev(dev1, &ap->link) {
+		sata_fm_event_post(&ap->link, dev1, 0);
+	}
+
 	sata_pmp_detach(pmp_dev);
 	ata_dev_disable(pmp_dev);
 
diff -urN k2_os-kernel-2.6.28.10-8b11/include/linux/fm/Kbuild k2_os-kernel-2.6.28.10-8b11-sata/include/linux/fm/Kbuild
--- k2_os-kernel-2.6.28.10-8b11/include/linux/fm/Kbuild	1970-01-01 08:00:00.000000000 +0800
+++ k2_os-kernel-2.6.28.10-8b11-sata/include/linux/fm/Kbuild	2010-07-17 00:14:33.000000000 +0800
@@ -0,0 +1 @@
+unifdef-y += protocol.h
diff -urN k2_os-kernel-2.6.28.10-8b11/include/linux/Kbuild k2_os-kernel-2.6.28.10-8b11-sata/include/linux/Kbuild
--- k2_os-kernel-2.6.28.10-8b11/include/linux/Kbuild	2010-07-17 00:09:50.000000000 +0800
+++ k2_os-kernel-2.6.28.10-8b11-sata/include/linux/Kbuild	2010-07-17 00:15:03.000000000 +0800
@@ -379,3 +379,4 @@
 
 header-y += vserver/
 
+header-y += fm/
